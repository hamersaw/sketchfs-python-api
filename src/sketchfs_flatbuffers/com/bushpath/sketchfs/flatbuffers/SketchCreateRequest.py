# automatically generated by the FlatBuffers compiler, do not modify

# namespace: flatbuffers

import flatbuffers

class SketchCreateRequest(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsSketchCreateRequest(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SketchCreateRequest()
        x.Init(buf, n + offset)
        return x

    # SketchCreateRequest
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SketchCreateRequest
    def Sketch(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .Sketch import Sketch
            obj = Sketch()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def SketchCreateRequestStart(builder): builder.StartObject(1)
def SketchCreateRequestAddSketch(builder, sketch): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(sketch), 0)
def SketchCreateRequestEnd(builder): return builder.EndObject()
